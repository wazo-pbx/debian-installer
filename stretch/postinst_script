#!/bin/bash

set +x

export DEBIAN_FRONTEND=noninteractive
export DEBIAN_PRIORITY=critical
export DEBCONF_NOWARNINGS=yes


scr_clear()
{
    clear
}

scr_print()
{
    echo -en $1
}

scr_println()
{
    scr_print "$1\n\r"
}

scr_println_ok()
{
    scr_println "\033[0;32;40m$1\033[0;38;40m"
}

scr_println_error()
{
    scr_println "\033[0;31;40m$1\033[0;38;40m"
}

scr_progress()
{
    scr_print "."
}

scr_progress_done()
{
    scr_println_ok "DONE"
}

scr_begin()
{
    scr_print "\033[0;38;40m"
}

scr_end()
{
    scr_print "\033[0;37;40m"
}

exit_error()
{
    scr_println
    scr_println
    scr_println_error "Installation Failed !!!"
    scr_println
    scr_println "Press Enter to login and analyse the installation log ($postinst_log)."
    scr_println
    read z

    scr_end
    exit 1
}

display_final_info()
{
    scr_println
    scr_println_ok "Installation successful !!!"

    MSG=$(ip addr show | grep "inet .* scope global")
    scr_println
    scr_println "Network information:"
    scr_println "${MSG}"

    scr_println
    scr_println "Press Enter to login and configure."
    scr_println
    read z
}

finish_fai()
{

    rm /etc/apt/apt.conf

    # packages cleanup
    pkg_manager clean

    # remove FAI hook
    # clean rc.local
    sed -i "s:sh /var/lib/xivo-fai/postinst_script_launcher::" /etc/rc.local
}

pkg_manager()
{
    # in this subshell, the trap on ERR is _not_ inherited
    (
        for I in $(seq 1 3); do
            apt-get -o Dpkg::Options::="--force-confold" $*
            if [ $? = 0 ]; then
                exit 0
            fi
        done
        exit 1
    )
    if [ $? != 0 ]; then
        exit_error
    fi
}

has_ip_addr_via_dhcp()
{
    network_interface="$(find /var/run/dhclient.* -printf "%f\n" | sed -r 's/dhclient\.(.*)\.pid/\1/' | head -n 1)"
    if [ -z "$network_interface" ] ; then
        echo "Could not find an interface configured by dhclient"
        return 2
    fi
    if [ -n "$(ifconfig $network_interface | grep 'inet addr:')" ] ; then
        return 0
    fi
    return 1
}

check_ip_address()
{
    tries_left=10
    while ! has_ip_addr_via_dhcp && [ $tries_left -gt 0 ] ; do
        sleep 3
        tries_left=$(($tries_left - 1))
    done
    if [ $tries_left -eq 0 ] ; then
        return 1  # timeout
    fi
    return 0
}


# catch errors
trap exit_error ERR

scr_begin
scr_clear
scr_println
scr_println "=*=  XiVO Fully Automatic Installation =*="
scr_println

# discovery
SUITE=$(cat $postinst_dir/suite)
CLASSES=$(cat $postinst_dir/classes)
KERN_REL=$(uname -r)
KERN_FLAVOUR=$(echo ${KERN_REL} | cut -d\- -f3)

echo "Checking IP address configuration"
if ! check_ip_address ; then
    echo "Could not get IP address. Please check your DHCP configuration. Exiting ..."
    exit_error
fi
echo "IP address OK"

dnsdomain=$(dnsdomainname)
if [ $dnsdomain != 'lan.proformatique.com' ]; then
    country="fr"
else
    country="ca"
fi
mirror="mirror.${dnsdomain}:3142"

sed -i -r "s#http://$mirror/debian#http://ftp.$country.debian.org/debian/#" /etc/apt/sources.list

if [ $dnsdomain != 'avencall.com' ] || [ $dnsdomain != 'wazo.community' ]; then
    echo "Acquire::http { Proxy \"http://$mirror\"; };" > /etc/apt/apt.conf
fi

scr_print "Base installation in progress"

# configure syslog
echo "*.* /dev/tty12" >>/etc/rsyslog.conf
invoke-rc.d rsyslog restart
scr_progress

pkg_manager update
scr_progress

# fetch security and other updates

pkg_manager -yq dist-upgrade
scr_progress

# remove unused lv, partman limitation
unused_lv="/dev/data/to_remove"
if [ -L $unused_lv ]; then
    lvremove -f $unused_lv
fi
# install extra packages
echo 'wireshark-common wireshark-common/install-setuid boolean true' | debconf-set-selections
pkg_manager -yq install ssh postfix sudo vim-nox bzip2 \
    less iputils-ping host traceroute popularity-contest linuxlogo \
    locate htop iftop nmap lsof tshark telnet \
    tcpdump multitail screen mtr-tiny patch tree curl ldap-utils \
    bash-completion whois pciutils ngrep dstat sysstat libxml2-utils \
    arping p7zip python-pexpect
pkg_manager -y purge exim4-base exim4-config tasksel tasksel-data nvi
scr_progress

# configure vim
sed -i 's/"syntax on/syntax on/' /etc/vim/vimrc
sed -i 's/"set background=dark/set background=dark/' /etc/vim/vimrc

# configure ssh
sed -i 's/^PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config
systemctl restart ssh

# create bash profil
cat > /etc/profile.d/xivo.sh << EOF
# Commented out, don't overwrite xterm -T "title" -n "icontitle" by default.
# If this is an xterm set the title to user@host:dir
# (This modifies the terminal title, not the PS1 ...)
case "$TERM" in
xterm*|rxvt*)
    PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD}\007"'
    ;;
*)
    ;;
esac

# enable bash completion in interactive shells
if [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
fi

export LS_OPTIONS='--color=auto'
eval "$(dircolors)"
alias ls='ls $LS_OPTIONS'
alias ll='ls $LS_OPTIONS -l'
EOF

# screenrc
cat > /root/.screenrc << EOF
# set a big scrolling buffer
defscrollback 10000
# Set the caption on the bottom line
caption always "%{= kw}%-w%{= BW}%n %t%{-}%+w %-= @%H - %LD %d %LM - %c"
shell -/bin/bash
EOF

# miscellaneous configuration
chmod 700 /root
## no disclosure when logouting
echo "clear" >/root/.bash_logout
systemctl daemon-reload
scr_progress

scr_progress_done

# run custom postinst commands if needed
for script in $(find $postinst_dir/postinst.d -mindepth 1 -maxdepth 1 | sort); do
    . $script
done

pkg_manager update
scr_progress

finish_fai
display_final_info

rm /etc/systemd/system/rc-local.service.d/console.conf

scr_end
